/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Registries
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ContainerRegistry.
 */
export interface Registries {

    /**
     * @param {string} resourceGroup
     * 
     * @param {string} registryName
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getProperties(resourceGroup: string, registryName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RegistryParameters>): void;
    getProperties(resourceGroup: string, registryName: string, callback: ServiceCallback<models.RegistryParameters>): void;

    /**
     * @param {string} resourceGroup
     * 
     * @param {string} registryName
     * 
     * @param {object} registryParameters
     * 
     * @param {string} [registryParameters.id]
     * 
     * @param {string} [registryParameters.name]
     * 
     * @param {string} [registryParameters.location]
     * 
     * @param {object} [registryParameters.tags]
     * 
     * @param {object} [registryParameters.properties]
     * 
     * @param {string} [registryParameters.properties.loginServer]
     * 
     * @param {string} [registryParameters.properties.username]
     * 
     * @param {string} [registryParameters.properties.key]
     * 
     * @param {date} [registryParameters.properties.creationDate]
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroup: string, registryName: string, registryParameters: models.RegistryParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
    create(resourceGroup: string, registryName: string, registryParameters: models.RegistryParameters, callback: ServiceCallback<any>): void;

    /**
     * @param {string} resourceGroup
     * 
     * @param {string} registryName
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroup: string, registryName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
    deleteMethod(resourceGroup: string, registryName: string, callback: ServiceCallback<any>): void;

    /**
     * @param {string} resourceGroup
     * 
     * @param {string} registryName
     * 
     * @param {object} resource
     * 
     * @param {string} [resource.id]
     * 
     * @param {string} [resource.name]
     * 
     * @param {string} [resource.location]
     * 
     * @param {object} [resource.tags]
     * 
     * @param {object} [resource.properties]
     * 
     * @param {string} [resource.properties.loginServer]
     * 
     * @param {string} [resource.properties.username]
     * 
     * @param {string} [resource.properties.key]
     * 
     * @param {date} [resource.properties.creationDate]
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroup: string, registryName: string, resource: models.RegistryParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
    update(resourceGroup: string, registryName: string, resource: models.RegistryParameters, callback: ServiceCallback<any>): void;

    /**
     * @param {string} resourceGroup
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroup(resourceGroup: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceListRegistryParameters>): void;
    listByResourceGroup(resourceGroup: string, callback: ServiceCallback<models.ResourceListRegistryParameters>): void;

    /**
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceListRegistryParameters>): void;
    list(callback: ServiceCallback<models.ResourceListRegistryParameters>): void;
}
